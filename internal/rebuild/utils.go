package rebuild

import (
	"encoding/json"
	"fmt"
	"os"
	"path/filepath"

	"github.com/chains-project/geth-rebuild/internal/utils"
)

// Reads and parses json log file generated by docker script
func readParseLog(jsonFile string) (RebuildResult, error) {
	data, err := os.ReadFile(jsonFile)
	if err != nil {
		return RebuildResult{}, fmt.Errorf("failed to read log file: %w", err)
	}

	var result RebuildResult
	if err := json.Unmarshal(data, &result); err != nil {
		return RebuildResult{}, fmt.Errorf("failed to unmarshal log data: %w", err)
	}
	return result, nil
}

// Moves file from from to to
func moveLog(from string, to string) error {
	if err := os.Rename(from, to); err != nil {
		return fmt.Errorf("failed to move log file: %w", err)
	}
	return nil
}

// Creates unique directory path that is categorized (match, mismatch, error)
func getCategorizedPath(status Status, dockerTag string, paths utils.Paths) (string, error) {
	switch status {
	case Match:
		return filepath.Join(paths.Directories.MatchLogs, dockerTag), nil
	case Mismatch:
		return filepath.Join(paths.Directories.MismatchLogs, dockerTag), nil
	case Error:
		return filepath.Join(paths.Directories.ErrorLogs, dockerTag), nil
	default:
		return "", fmt.Errorf("error: unexpected rebuild status: %s", status)
	}
}
